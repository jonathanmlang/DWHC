#ifndef SYMBOL_H
#define SYMBOL_H

//const byte prog[9]={B10000000, B11000000, B11100000, B11110000, B11111000, B11111100, B11111110, B11111111};
const byte prog=B01111110;
GLCDFONTDECL(symbol) = {
    0x0, 0x1, // size of one indicates fixed font width and no pixel padding
    0x08, // width
    0x08, // height
    0x20, // first char
    0x5f, // char count



0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char  
0xFC, 0xFC, 0xFC, 0x7C, 0x7C, 0x7C, 0x00, 0x00,  // Code for char !
0x00, 0x00, 0x04, 0x04, 0x04, 0x7F, 0x7F, 0x7F,  // Code for char "
0x7F, 0x7F, 0x7F, 0x04, 0x04, 0x04, 0x00, 0x00,  // Code for char #
        
0x00, 0x00, 0x7C, 0x7C, 0x7C, 0xFC, 0xFC, 0xFC,  // $
0x7F, 0x61, 0x7F, 0x00, 0x17, 0x75, 0x38, 0x20,  //%  min cond fan pwm
0x00, 0x7E, 0x7E, 0x4E, 0x48, 0x7E, 0x7E, 0x00,  //&  Code for char & save icon
0x7F, 0x7F, 0x7F, 0x00, 0x17, 0x75, 0x38, 0x20,  //'  max cond fan pwm
0x00,0x00,0x00,0x3C,0x42,0x00,0x00,0x00,  // (
0x00,0x00,0x00,0x42,0x3C,0x00,0x00,0x00,  // )
0x00,0x10,0x54,0x38,0x54,0x10,0x00,0x00,  // *
0x00,0x10,0x10,0x7C,0x10,0x10,0x00,0x00,  // +
0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,  // ,
0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00,  // Code for char -     bullet
0x00,0x00,0x00,0x60,0x60,0x00,0x00,0x00,  // .
0x00,0x40,0x20,0x10,0x08,0x04,0x00,0x00,  // /

0x1C, 0x22, 0x7F, 0x63, 0x55, 0x2A, 0x1C, 0x00,  // 0 pump icon
0x38, 0x44, 0x80, 0x8E, 0x80, 0x44, 0x38, 0x00,  // 1 power icon
0x1C, 0x22, 0x7F, 0x7F, 0x5D, 0x2A, 0x1C, 0x00,  // 2 pump icon active
0x01, 0x01, 0x71, 0x8A, 0x84, 0x8A, 0x72, 0x01,  // Code for char 3 glow left
0x01, 0x72, 0x8A, 0x84, 0x8A, 0x71, 0x01, 0x01,  // Code for char 4 glow right
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // 5 full square
0x3C,0x4A,0x4A,0x4A,0x4A,0x30,0x00,0x00,  // 6
0x02,0x02,0x62,0x12,0x0A,0x06,0x00,0x00,  // 7
0x34,0x4A,0x4A,0x4A,0x4A,0x34,0x00,0x00,  // 8
0x0C,0x52,0x52,0x52,0x52,0x3C,0x00,0x00,  // 9
0x18, 0x24, 0x42, 0x81, 0x81, 0x42, 0x24, 0x18,  // Code for char : unlit led
0x18, 0x3C, 0x7E, 0xFF, 0xFF, 0x7E, 0x3C, 0x18, // code for char ;  lit led
0x18, 0x3C, 0x7E, 0xFF, 0x3C, 0x3C, 0x3C, 0x3C, // < Left arrow
0x6C, 0x92, 0x92, 0x00, 0xE0, 0x10, 0x10, 0x00,  // Code for char =     Er
0x3C, 0x3C, 0x3C, 0x3C, 0xFF, 0x7E, 0x3C, 0x18,  // Code for char >     right arrow
0x00, 0x00, 0x00, 0x00, 0x60, 0x9F, 0x9F, 0x60,  // Code for char ?     thermometer
0x00, 0x11, 0x0A, 0x04, 0x60, 0x9F, 0x9F, 0x60,  // Code for char @     thermometer with arrow
0x20, 0x6A, 0x3F, 0x64, 0x26, 0xFC, 0x56, 0x04,  // Code for char A     ice
0x64, 0xF6, 0x3E, 0x7C, 0xF8, 0xDE, 0x4C, 0x00,  // Code for char B     fan
0x1F, 0x11, 0x11, 0x00, 0x60, 0x9F, 0x9F, 0x60,  // Code for char C     condensor therm
0x00, 0x11, 0x0A, 0x04, 0x00, 0x55, 0x55, 0x55,  // Code for char D     state
0x1F, 0x15, 0x11, 0x00, 0x60, 0x9F, 0x9F, 0x60,  // Code for char E     evaporator therm
0x00, 0x38, 0x7E, 0x7F, 0x7E, 0x38, 0x00, 0x00,  // Code for char F     heat lines (drip now)
0x00, 0x08, 0x08, 0x08, 0x3E, 0x1C, 0x08, 0x00,  // Code for char G     small arrow
0x00, 0x22, 0x72, 0xFA, 0x22, 0x22, 0x1C, 0x00,  // Code for char H     reverse arrow
0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char I     frame left
0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,  // Code for char J     frame top
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,  // Code for char K     frame bottom
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,  // Code for char L     frame right
0x3C, 0x42, 0x81, 0x8F, 0x8F, 0x81, 0x42, 0x3C,  // M clock
0x40, 0x80, 0x50, 0xBE, 0x54, 0x80, 0x40, 0x00,  // Code for char N   core temp
0x0C, 0x7E, 0xE6, 0xE4, 0xE4, 0xE4, 0x78, 0x00,  // Code for char O   fuel tank
        


prog,prog,prog,prog,prog,prog,prog,prog,  //P
prog,prog,prog,prog,prog,prog,prog,0,     //Q
prog,prog,prog,prog,prog,prog,0,0,        //R
prog,prog,prog,prog,prog,0,0,0,           //S
prog,prog,prog,prog,0,0,0,0,              //T
prog,prog,prog,0,0,0,0,0,                 //U
prog,prog,0,0,0,0,0,0,                    //V
prog,prog,0,0,0,0,0,0,                    //W
prog,0,0,0,0,0,0,0,                       //X                       
  
0x02,0x04,0x08,0x70,0x08,0x04,0x02,0x00,  // Y
0x42,0x62,0x52,0x4A,0x46,0x42,0x00,0x00,  // Z
0x00,0x00,0x7E,0x42,0x42,0x00,0x00,0x00,  // [
0x00,0x04,0x08,0x10,0x20,0x40,0x00,0x00,  // <backslash>
0x00,0x00,0x42,0x42,0x7E,0x00,0x00,0x00,  // ]
0x00,0x08,0x04,0x7E,0x04,0x08,0x00,0x00,  // ^
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,  // _

0x3C,0x42,0x99,0xA5,0xA5,0x81,0x42,0x3C,  // `

        0xFE, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82,  // Code for char a  |=
        0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82,   // Code for char b  =
        0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0xFE,  // Code for char c  =|
        0x44, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82,  // Code for char d  :=
        0x7C, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82,  // e         i=
0x00,0x00,0x00,0x7C,0x0A,0x02,0x00,0x00,  // f
0x00,0x18,0xA4,0xA4,0xA4,0xA4,0x7C,0x00,  // g
0x00,0x7E,0x08,0x08,0x08,0x70,0x00,0x00,  // h
0x00,0x00,0x00,0x48,0x7A,0x40,0x00,0x00,  // i
0x00,0x00,0x40,0x80,0x80,0x7A,0x00,0x00,  // j
0x00,0x7E,0x18,0x24,0x40,0x00,0x00,0x00,  // k
0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // l rest of ml
0xF8, 0x10, 0x20, 0x10, 0xF8, 0x00, 0xFE, 0x80,  // m mL
0x00,0x7C,0x04,0x04,0x04,0x78,0x00,0x00,  // n
0x00,0x38,0x44,0x44,0x44,0x38,0x00,0x00,  // o


        0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,  // Code for char p     Top edge
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,  // Code for char q     TL corner
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,  // Code for char r     Left edge
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,  // Code for char s     LB corner
        0x03, 0x05, 0x0B, 0x15, 0x0B, 0x15, 0x0B, 0x15,  // Code for char t     first B edge
        0x0B, 0x15, 0x0B, 0x15, 0x0B, 0x15, 0x0B, 0x15,  // Code for char u     B edge
        0x0B, 0x15, 0x0A, 0x15, 0x0A, 0x00, 0x00, 0x00,  // Code for char v     BR corner
        0xFF, 0x55, 0xAA, 0x55, 0xAA, 0x00, 0x00, 0x00,  // Code for char w     R edge
        0xFF, 0x55, 0xAA, 0x54, 0xA8, 0x00, 0x00, 0x00,  // Code for char x     last R edge
        0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char y     RB corner
0x00,0x44,0x64,0x54,0x4C,0x44,0x00,0x00,  // z
0x00,0x08,0x08,0x76,0x42,0x42,0x00,0x00,  // {
0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,  // |
0x00,0x42,0x42,0x76,0x08,0x08,0x00,0x00,  // }
0x00,0x00,0x04,0x02,0x04,0x02,0x00,0x00,  // ~
};

#endif
